services:
  postgres:
    container_name: postgres_wallets
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my_pass
      POSTGRES_DB: wallets_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d wallets_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    container_name: kafka_wallets
    image: docker.io/bitnami/kafka:3.7
    ports: 
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  user-generator:
    container_name: user_generator
    build:
      context: .
      dockerfile: deployment/user-generator/Dockerfile
    depends_on:
      - kafka
    environment:
      - KAFKA_PRODUCER=kafka:9092
    restart: on-failure
  
  xr-service:
    container_name: xr_service
    build:
      context: .
      dockerfile: deployment/xr-service/Dockerfile
    restart: on-failure

volumes:
  postgres-data:
    driver: local
  kafka_data:
    driver: local